// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pinterest.Database.Users.Context;

#nullable disable

namespace Pinterest.Database.Users.Migrations
{
    [DbContext(typeof(UsersDbContext))]
    partial class UsersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Pinterest.Domain.Users.Entities.FavoritePost", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("PostUuid")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserUuid")
                        .HasColumnType("uuid");

                    b.HasKey("Uuid");

                    b.HasIndex("UserUuid");

                    b.ToTable("FavoritePosts");
                });

            modelBuilder.Entity("Pinterest.Domain.Users.Entities.Subscription", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("SubscriberUuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SubscriptionsUuid")
                        .HasColumnType("uuid");

                    b.HasKey("Uuid");

                    b.HasIndex("SubscriberUuid");

                    b.HasIndex("SubscriptionsUuid");

                    b.HasIndex("Uuid")
                        .IsUnique();

                    b.ToTable("Subscription", "public");
                });

            modelBuilder.Entity("Pinterest.Domain.Users.Entities.User", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Uuid");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Uuid")
                        .IsUnique();

                    b.ToTable("User", "public");
                });

            modelBuilder.Entity("Pinterest.Domain.Users.Entities.UserTheme", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("UserUuid")
                        .HasColumnType("uuid");

                    b.HasKey("Uuid");

                    b.HasIndex("UserUuid");

                    b.ToTable("UserThemes");
                });

            modelBuilder.Entity("Pinterest.Domain.Users.Entities.FavoritePost", b =>
                {
                    b.HasOne("Pinterest.Domain.Users.Entities.User", null)
                        .WithMany("FavoritesPosts")
                        .HasForeignKey("UserUuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Pinterest.Domain.Users.Entities.Subscription", b =>
                {
                    b.HasOne("Pinterest.Domain.Users.Entities.User", "Subscriber")
                        .WithMany("Subscribers")
                        .HasForeignKey("SubscriberUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pinterest.Domain.Users.Entities.User", "Subscriptions")
                        .WithMany("Subscriptions")
                        .HasForeignKey("SubscriptionsUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscriber");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("Pinterest.Domain.Users.Entities.UserTheme", b =>
                {
                    b.HasOne("Pinterest.Domain.Users.Entities.User", null)
                        .WithMany("UserThemes")
                        .HasForeignKey("UserUuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Pinterest.Domain.Users.Entities.User", b =>
                {
                    b.Navigation("FavoritesPosts");

                    b.Navigation("Subscribers");

                    b.Navigation("Subscriptions");

                    b.Navigation("UserThemes");
                });
#pragma warning restore 612, 618
        }
    }
}
